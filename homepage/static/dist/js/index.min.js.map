{"version":3,"sources":["webpack://homepage/./homepage/static/src/ts/header.ts","webpack://homepage/./homepage/static/src/ts/apps.ts"],"names":["document","addEventListener","event","setup","preview","getElementById","element","camera","THREE","PerspectiveCamera","clientWidth","clientHeight","position","z","renderer","WebGLRenderer","antialias","alpha","setSize","prepend","domElement","textureLoader","TextureLoader","load","onWindowResize","depthTextureLoader","shaderMaterial","ShaderMaterial","uniforms","mouseX","value","mouseY","scrollOffset","texture","depthTexture","vertexShader","fragmentShader","scene","Scene","geometry","PlaneBufferGeometry","mesh","Mesh","onMouseMove","e","rect","getBoundingClientRect","x","Math","max","min","clientX","left","y","clientY","top","style","transform","window","requestAnimationFrame","render","aspect","updateProjectionMatrix","vFOV","degToRad","fov","maxHeight","tan","height","width","scale","set","updateDeviceWidth","documentElement","display","removeEventListener","add","threeIsLoaded","loadThreeAndSetupIfNeeded","script","createElement","setAttribute","onload","body","appendChild","macbookContainer","macbookCodeContainer","canvas","ctx","getContext","frame","Image","frameURL","index","clearRect","drawImage","hasPreloadedFrames","updateCurrentPeerbridgeFrame","progress","innerHeight","i","Promise","r","image","onerror","src","frameIndex","round","updateCodeScroll","scrollTop"],"mappings":"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","file":"index.min.js","sourcesContent":["// THREE is loaded asynchronously, only on non-mobile devices\n// therefore, don't import the THREE modules and mock the THREE import\ndeclare var THREE: any\n\ndocument.addEventListener(\"DOMContentLoaded\", function(event) {\n    function setup() {\n        const preview = document.getElementById('profile-icon-preview');\n        const element = document.getElementById('profile-icon-webgl');\n\n        const camera = new THREE.PerspectiveCamera(\n            45, element.clientWidth / element.clientHeight, 1, 1000\n        );\n        camera.position.z = 200;\n\n        const renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true });\n        renderer.setSize(element.clientWidth, element.clientHeight);\n        element.prepend(renderer.domElement);\n\n        const vertexShader = `\n            varying vec2 vUv;\n            void main()\t{\n                vUv = uv;\n                gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n            }\n        `;\n\n        const fragmentShader = `\n            #extension GL_OES_standard_derivatives : enable\n            varying vec2 vUv;\n            uniform float mouseX;\n            uniform float mouseY;\n            uniform float scrollOffset;\n            uniform sampler2D depthTexture;\n            uniform sampler2D texture;\n            void main() {\n                vec2 vMouse = vec2(mouseX, mouseY);\n                vec2 vScrollOffset = vec2(0, scrollOffset);\n                float depth = texture2D(depthTexture, vUv).r;\n                gl_FragColor = texture2D(texture, vUv + vMouse * (depth) + vScrollOffset);\n                // Do some edge anti aliasing, because the image contains\n                // a premultiplied alpha channel\n                gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;\n            }\n        `;\n\n        const textureLoader = new THREE.TextureLoader()\n            .load('/static/img/ausschnitt.webp', function() {\n                onWindowResize();\n            });\n\n        const depthTextureLoader = new THREE.TextureLoader()\n            .load('/static/img/ausschnitt-depth.webp', function() {\n                onWindowResize();\n            });\n\n        const shaderMaterial = new THREE.ShaderMaterial({\n            uniforms: {\n                mouseX: {value: 0},\n                mouseY: {value: 0},\n                scrollOffset: {value: 0},\n                texture: {value: textureLoader},\n                depthTexture: {value: depthTextureLoader},\n            },\n            vertexShader,\n            fragmentShader\n        });\n\n        const scene = new THREE.Scene();\n        const geometry = new THREE.PlaneBufferGeometry(1, 1);\n        const mesh = new THREE.Mesh(geometry, shaderMaterial);\n        scene.add(mesh);\n\n        function onMouseMove(e: MouseEvent) {\n            const rect = element.getBoundingClientRect();\n            const x = Math.max(-500, Math.min(500, e.clientX - rect.left));\n            const y = Math.max(-500, Math.min(500, e.clientY - rect.top));\n            shaderMaterial.uniforms.mouseX.value = -x / 15000;\n            shaderMaterial.uniforms.mouseY.value = y / 15000;\n            element.style.transform = `rotate3d(0, 1, 1, ${x / 50}deg)`;\n            window.requestAnimationFrame(function() {\n                renderer.render(scene, camera);\n            });\n        }\n\n        function onWindowResize() {\n            camera.aspect = element.clientWidth / element.clientHeight;\n            camera.updateProjectionMatrix();\n\n            const vFOV = THREE.Math.degToRad(camera.fov);\n            const maxHeight = 2 * Math.tan(vFOV / 2) * camera.position.z;\n            const imageAspect = 600 / 600;\n            const height = maxHeight;\n            const width = maxHeight * imageAspect;\n            mesh.scale.set(width, height, 1);\n\n            renderer.setSize(element.clientWidth, element.clientHeight);\n            window.requestAnimationFrame(function() {\n                renderer.render(scene, camera);\n            });\n        }\n\n        function updateDeviceWidth() {\n            if (document.documentElement.clientWidth < 1023) {\n                element.style.display = 'none';\n                preview.style.display = 'block';\n                window.removeEventListener('resize', onWindowResize, true);\n                document.removeEventListener('mousemove', onMouseMove, true);\n            } else {\n                preview.style.display = 'none';\n                element.style.display = 'block';\n                onWindowResize();\n                window.addEventListener('resize', onWindowResize, true);\n                document.addEventListener('mousemove', onMouseMove, true);\n            }\n        }\n\n        updateDeviceWidth();\n        window.addEventListener('resize', updateDeviceWidth, false);\n    }\n\n    let threeIsLoaded = false;\n\n    function loadThreeAndSetupIfNeeded() {\n        if (document.documentElement.clientWidth < 1023) return;\n        if (threeIsLoaded) return;\n        const script = document.createElement('script');\n        script.setAttribute('src', '/static/vendor/js/three.min.js');\n        script.onload = setup;\n        document.body.appendChild(script);\n        threeIsLoaded = true;\n    }\n\n    loadThreeAndSetupIfNeeded();\n    window.addEventListener('resize', loadThreeAndSetupIfNeeded, false);\n});\n","document.addEventListener(\"DOMContentLoaded\", function(event) {\n  const macbookContainer = document.getElementById('macbook-container');\n  const macbookCodeContainer = document.getElementById('macbook-code-container');\n  const preview = document.getElementById('peerbridge-animation-preview');\n  const canvas = <HTMLCanvasElement> document.getElementById('peerbridge-animation');\n  const ctx = canvas.getContext('2d');\n\n  const height = canvas.width * (2541 / 2225);\n  canvas.height = height;\n\n  const frame = new Image();\n  frame.onload = function() {\n    ctx.clearRect(0,0,canvas.width,canvas.height)\n    ctx.drawImage(frame, 0, 0, frame.width, frame.height, // source rectangle\n                  0, 0, canvas.width, canvas.height); // destination rectangle\n  }\n\n  function frameURL(index: Number) {\n    return `/static/img/peerbridge-animation/animation-1000_${index}.webp`;\n  }\n\n  let hasPreloadedFrames = false;\n\n  function updateCurrentPeerbridgeFrame() {\n    const rect = canvas.getBoundingClientRect();\n    const progress = 1 - (rect.y + window.innerHeight) / (rect.height + window.innerHeight);\n    if (progress > 1 || progress < 0) return;\n    const numberOfFrames = 120 - 38;\n    if (!hasPreloadedFrames) {\n      for (let i = 38; i <= 120; i++) {\n        new Promise(r => {\n          var image = new Image();\n          image.onload = r;\n          image.onerror = r;\n          image.src = frameURL(i);\n        });\n      }\n      hasPreloadedFrames = true;\n    }\n    const frameIndex = 38 + Math.round(progress * numberOfFrames);\n    frame.src = frameURL(frameIndex);\n  }\n\n  function updateCodeScroll() {\n    const rect = macbookContainer.getBoundingClientRect();\n    const progress = 1 - (rect.y + window.innerHeight) / (rect.height + window.innerHeight);\n    if (progress > 1 || progress < 0) return;\n    macbookCodeContainer.scrollTop = progress * 1000;\n  }\n\n  function updateDeviceWidth() {\n    if (document.documentElement.clientWidth < 1023) {\n      canvas.style.display = 'none';\n      preview.style.display = 'block';\n      window.removeEventListener('scroll', updateCurrentPeerbridgeFrame, true);\n\n      window.removeEventListener('scroll', updateCodeScroll, true);\n    } else {\n      preview.style.display = 'none';\n      canvas.style.display = 'block';\n      updateCurrentPeerbridgeFrame();\n      window.addEventListener('scroll', updateCurrentPeerbridgeFrame, true);\n      updateCodeScroll();\n      window.addEventListener('scroll', updateCodeScroll, true);\n    }\n  }\n\n  updateDeviceWidth();\n  window.addEventListener('resize', updateDeviceWidth, false);\n});\n"],"sourceRoot":""}