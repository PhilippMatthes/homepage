{"version":3,"sources":["webpack://homepage/./homepage/static/src/ts/index/apps/macbook.ts","webpack://homepage/./homepage/static/src/ts/index/apps/peerbridge.ts","webpack://homepage/./homepage/static/src/ts/index/header/loader.ts","webpack://homepage/./homepage/static/src/ts/index/header/image.ts","webpack://homepage/./homepage/static/src/ts/index/header/header.ts","webpack://homepage/webpack/startup"],"names":["document","addEventListener","macbookContainer","getElementById","macbookCodeContainer","hook","ParallaxHook","progress","scrollTop","value","updateDeviceWidth","documentElement","clientWidth","detach","attach","window","container","preview","canvas","context","getContext","frame","Image","onload","clearRect","width","height","filter","drawImage","frameURL","index","frameIndex","Math","round","lastFrameIndex","src","style","display","clientHeight","threeLink","this","load","Promise","resolve","reject","id","getAttribute","undefined","Error","href","threeElement","createElement","parentNode","insertBefore","nextSibling","imageElement","loadTextureBehindAttribute","attribute","textureLoader","THREE","TextureLoader","parallaxScene","camera","PerspectiveCamera","position","z","diffuseTextureLoader","depthTextureLoader","renderer","WebGLRenderer","antialias","alpha","setSize","domElement","shaderMaterial","ShaderMaterial","uniforms","mouseX","mouseY","scrollOffset","texture","depthTexture","vertexShader","fragmentShader","scene","Scene","geometry","PlaneBufferGeometry","mesh","Mesh","add","ParallaxScene","show","hide","image","requestAnimationFrame","render","updateViewportAspectRatio","aspect","naturalWidth","naturalHeight","updateProjectionMatrix","vFOV","degToRad","fov","maxHeight","tan","scale","set","reactToMouseMove","event","rect","getBoundingClientRect","x","max","min","clientX","left","y","clientY","top","transform","bind","removeEventListener","querySelector","threeLoader","ThreeLoader","parallaxImageElements","querySelectorAll","parallaxImages","Array","from","map","element","ParallaxImage","updateWindowDimensions","parallaxImage","__webpack_modules__"],"mappings":"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","file":"index.min.js","sourcesContent":["declare var ParallaxHook: any\n\n\ndocument.addEventListener('DOMContentLoaded', async () => {\n    const macbookContainer = <HTMLDivElement>\n        document.getElementById('macbook-container')\n    const macbookCodeContainer = <HTMLDivElement>\n        document.getElementById('macbook-code-container')\n    const hook = new ParallaxHook(\n        macbookContainer,\n        () => {},\n        (progress: any) => {\n            macbookCodeContainer.scrollTop = progress.value * 700;\n        },\n        () => {}\n    )\n\n    const updateDeviceWidth = () => {\n        if (document.documentElement.clientWidth < 1023) {\n            hook.detach()\n        } else {\n            hook.attach()\n        }\n    }\n    updateDeviceWidth()\n    window.addEventListener('resize', updateDeviceWidth, false)\n})\n","declare var ParallaxHook: any\n\n\ndocument.addEventListener('DOMContentLoaded', async () => {\n    const container = <HTMLDivElement>\n        document.getElementById('peerbridge-animation-container')\n    const preview = <HTMLImageElement>\n        document.getElementById('peerbridge-animation-preview')\n    const canvas = <HTMLCanvasElement>\n        document.getElementById('peerbridge-animation')\n    const context = canvas.getContext('2d');\n\n    const frame = new Image()\n    frame.onload = () => {\n        context.clearRect(0, 0, canvas.width, canvas.height)\n        context.filter = 'invert(1)'\n        context.drawImage(\n            frame,\n            0, 0, frame.width, frame.height,\n            0, 0, canvas.width, canvas.height\n        )\n    }\n\n    const frameURL = (index: number) => {\n        return `/static/img/peerbridge-animation/animation-1000_${index}.webp`\n    }\n\n    const hook = new ParallaxHook(\n        container,\n        () => {\n\n        },\n        (progress: any) => {\n            const firstFrameIndex = 38\n            const lastFrameIndex = 120\n            const numberOfFrames = lastFrameIndex - firstFrameIndex\n            const frameIndex = firstFrameIndex +\n                Math.round(progress.value * numberOfFrames)\n            frame.src = frameURL(frameIndex);\n        },\n        () => {}\n    )\n\n    const updateDeviceWidth = () => {\n        if (document.documentElement.clientWidth < 1023) {\n            canvas.style.display = 'none'\n            preview.style.display = 'block'\n            hook.detach()\n        } else {\n            const height = preview.clientHeight\n            const width = preview.clientWidth\n            preview.style.display = 'none'\n            canvas.style.display = 'block'\n            canvas.height = height\n            canvas.width = width\n            hook.attach()\n        }\n    }\n    updateDeviceWidth()\n    window.addEventListener('resize', updateDeviceWidth, false)\n})\n","/**\n * A lazy loader for the THREE.js script.\n *\n * Usage:\n *\n * ```typescript\n * const linkElement = <HTMLLinkElement>document\n *     .querySelector('link[rel=\"parallax-three-js\"]')\n * // TODO: Check if linkElement actually exists\n * const loader = new ThreeLoader(linkElement)\n *     .load(() => {\n *         // Do something on load\n *     })\n * ```\n */\nexport class ThreeLoader {\n    private threeLink: HTMLLinkElement\n\n    public constructor(threeLink: HTMLLinkElement) {\n        this.threeLink = threeLink\n    }\n\n    /**\n     * Load THREE.js into a script element.\n     *\n     * The script element is placed below the given link element.\n     * See index.ts for a usage example.\n     */\n    public async load(): Promise<HTMLScriptElement> {\n        return new Promise((resolve, reject) => {\n            const id = this.threeLink.getAttribute('data-id')\n            if (id === undefined) {\n                reject(new Error(\n                    'The link element has to supply a data-id attribute!'\n                ))\n            }\n\n            const href = this.threeLink.getAttribute('href')\n            if (href === undefined) {\n                reject(new Error(\n                    'The link element has to supply a href attribute!'\n                ))\n            }\n\n            // Check if there is already a THREE.js script element.\n            let threeElement = <HTMLScriptElement>\n                document.getElementById(id)\n            if (threeElement !== null) {\n                resolve(threeElement)\n                return\n            }\n\n            // If not, create a new one.\n            threeElement = document.createElement('script')\n            threeElement.onload = () => {\n                resolve(threeElement)\n            }\n            threeElement.id = id\n            threeElement.src = href\n            // Insert THREE.js after the link element.\n            this.threeLink.parentNode.insertBefore(\n                threeElement, this.threeLink.nextSibling\n            )\n        })\n    }\n}\n","/**\n * The lazily imported THREE.js library.\n *\n * THREE is loaded lazily and only on devices exceeding a given\n * maximum width. It will not be included as a module to reduce the\n * file size of this script.\n */\ndeclare var THREE: any\n\n/**\n * The vertex shader for the THREE.js web gl renderer.\n */\nconst vertexShader: String = `\n    varying vec2 vUv;\n\n    void main()\t{\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n    }\n`\n\n\n/**\n * The fragment shader for the THREE.js web gl renderer.\n */\nconst fragmentShader: String = `\n    #extension GL_OES_standard_derivatives : enable\n    varying vec2 vUv;\n    uniform float mouseX;\n    uniform float mouseY;\n    uniform float scrollOffset;\n    uniform sampler2D depthTexture;\n    uniform sampler2D texture;\n    void main() {\n        vec2 vMouse = vec2(mouseX, mouseY);\n        vec2 vScrollOffset = vec2(0, scrollOffset);\n        float depth = texture2D(depthTexture, vUv).r;\n        gl_FragColor = texture2D(\n            texture, vUv + vMouse * (depth) + vScrollOffset\n        );\n        // Do some edge anti aliasing, because the image\n        // may contain a premultiplied alpha channel.\n        gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;\n    }\n`\n\n/**\n * A parallax image, driven by THREE.js.\n */\nexport class ParallaxImage {\n    imageElement: HTMLImageElement\n\n    parallaxScene?: ParallaxScene\n\n    public constructor(imageElement: HTMLImageElement) {\n        this.imageElement = imageElement\n    }\n\n    public async loadTextureBehindAttribute(attribute: string): Promise<any> {\n        return new Promise((resolve, reject) => {\n            const src = this.imageElement.getAttribute(attribute)\n            if (src === null) {\n                reject(new Error(`\n                    The image element must include\n                    an attribute \"${attribute}\"!\n                `))\n                return\n            }\n            const textureLoader = new THREE.TextureLoader()\n                .load(src, () => {\n                    resolve(textureLoader)\n                })\n        })\n    }\n\n\n    public async load() {\n        if (this.parallaxScene !== undefined) {\n            return\n        }\n\n        const width = this.imageElement.clientWidth\n        const height = this.imageElement.clientHeight\n        const camera = new THREE.PerspectiveCamera(\n            45, width / height, 1, 1000\n        )\n        camera.position.z = 200\n        const diffuseTextureLoader = await this\n            .loadTextureBehindAttribute('src')\n        const depthTextureLoader = await this\n            .loadTextureBehindAttribute('data-parallax-depth-map')\n        const renderer = new THREE.WebGLRenderer({\n            antialias: true,\n            alpha: true\n        })\n        renderer.setSize(width, height)\n        const canvas = renderer.domElement\n        const shaderMaterial = new THREE.ShaderMaterial({\n            uniforms: {\n                mouseX: {value: 0},\n                mouseY: {value: 0},\n                scrollOffset: {value: 0},\n                texture: {value: diffuseTextureLoader},\n                depthTexture: {value: depthTextureLoader},\n            },\n            vertexShader,\n            fragmentShader\n        })\n        const scene = new THREE.Scene()\n        const geometry = new THREE.PlaneBufferGeometry(1, 1)\n        const mesh = new THREE.Mesh(geometry, shaderMaterial)\n        scene.add(mesh)\n\n        this.parallaxScene = new ParallaxScene(\n            this.imageElement,\n            canvas,\n            camera,\n            renderer,\n            diffuseTextureLoader,\n            depthTextureLoader,\n            shaderMaterial,\n            scene,\n            geometry,\n            mesh\n        )\n        return\n    }\n\n    public show(): void {\n        this.parallaxScene?.show()\n    }\n\n    public hide(): void {\n        this.parallaxScene?.hide()\n    }\n}\n\n\n/**\n * A parallax scene, driven by THREE.js.\n */\nclass ParallaxScene {\n    image: HTMLImageElement\n    canvas: HTMLCanvasElement\n    camera: any\n    renderer: any\n    diffuseTextureLoader: any\n    depthTextureLoader: any\n    shaderMaterial: any\n    scene: any\n    geometry: any\n    mesh: any\n\n    public constructor(\n        image: HTMLImageElement,\n        canvas: HTMLCanvasElement,\n        camera: any,\n        renderer: any,\n        diffuseTextureLoader: any,\n        depthTextureLoader: any,\n        shaderMaterial: any,\n        scene: any,\n        geometry: any,\n        mesh: any\n    ) {\n        this.image = image\n        this.canvas = canvas\n        this.camera = camera\n        this.renderer = renderer\n        this.diffuseTextureLoader = diffuseTextureLoader\n        this.depthTextureLoader = depthTextureLoader\n        this.shaderMaterial = shaderMaterial\n        this.scene = scene\n        this.geometry = geometry\n        this.mesh = mesh\n    }\n\n    private requestAnimationFrame(): void {\n        window.requestAnimationFrame(() => {\n            this.renderer.render(this.scene, this.camera)\n        })\n    }\n\n    private updateViewportAspectRatio(): void {\n        this.camera.aspect =\n            this.image.naturalWidth / this.image.naturalHeight\n        this.camera.updateProjectionMatrix()\n        const vFOV = THREE.Math.degToRad(this.camera.fov)\n        const maxHeight = 2 * Math.tan(vFOV / 2) * this.camera.position.z\n        const imageAspect =\n            this.image.naturalHeight / this.image.naturalWidth\n        const height = maxHeight\n        const width = maxHeight * imageAspect\n        this.mesh.scale.set(width, height, 1)\n        this.requestAnimationFrame()\n    }\n\n    private reactToMouseMove(event: MouseEvent): void {\n        const rect = this.canvas.getBoundingClientRect()\n        const x = Math.max(-500, Math.min(500, event.clientX - rect.left))\n        const y = Math.max(-500, Math.min(500, event.clientY - rect.top))\n        this.shaderMaterial.uniforms.mouseX.value = -x / 15000\n        this.shaderMaterial.uniforms.mouseY.value = y / 15000\n        this.canvas.style.transform = `rotate3d(0, 1, 1, ${x / 50}deg)`\n        this.requestAnimationFrame()\n    }\n\n    public show(): void {\n        this.canvas.style.display = 'block'\n        this.image.style.display = 'none'\n        if (this.canvas.parentNode === null) {\n            this.image.parentNode.insertBefore(\n                this.canvas, this.image.nextSibling\n            )\n            this.renderer.setSize(\n                this.canvas.clientWidth,\n                this.canvas.clientHeight\n            )\n        }\n        window.addEventListener(\n            'resize',\n            this.updateViewportAspectRatio.bind(this),\n            true\n        )\n        document.addEventListener(\n            'mousemove',\n            this.reactToMouseMove.bind(this),\n            true\n        )\n        this.updateViewportAspectRatio()\n        this.requestAnimationFrame()\n    }\n\n    public hide(): void {\n        this.image.style.display = 'block'\n        this.canvas.style.display = 'none'\n        window.removeEventListener(\n            'resize',\n            this.updateViewportAspectRatio.bind(this),\n            true\n        )\n        document.removeEventListener(\n            'mousemove',\n            this.reactToMouseMove.bind(this),\n            true\n        )\n    }\n}\n","/**\n * Author: Philipp Matthes\n *\n * This module is used for a parallax effect on images.\n *\n * It uses THREE.js (https://threejs.org/) on a canvas\n * together with an image and a depth map to apply\n * parallax occlusion mapping, similar to the\n * 3Dify app (https://github.com/3dify-app).\n *\n * Usage:\n *\n * ```html\n * <!-- Somewhere in your html --!>\n * <img ... src=\"path/to/preview.webp\"\n *          class=\"parallax\"\n *          data-parallax-depth-map=\"path/to/preview-depth.webp\">\n * <!-- Preferably at the bottom of your body element --!>\n * <link rel=\"parallax-three-js\"\n *       href=\"path/to/three.min.js\"\n *       data-id=\"id-of-the-lazyloaded-three-script-element\">\n * <!-- THREE.js will be loaded lazily to this location --!>\n * ```\n *\n * Notes:\n * - The srcset attribute is not supported.\n * - The image element gets lazily replaced (only on devices\n * wider than 1023 pixels) by a canvas which will render a\n * THREE.js parallax scene with the given depth map.\n * - THREE.js and the parallax effect is only loaded, when the\n * screen exceeds mobile device width of 1023 pixels. This also\n * applies to screen resizing events and not only the initial\n * page load.\n */\n\n\nimport { ThreeLoader } from './loader'\nimport { ParallaxImage } from './image'\n\n\ndocument.addEventListener('DOMContentLoaded', async () => {\n    const threeLink = <HTMLLinkElement>document\n        .querySelector('link[rel=\"parallax-three-js\"]')\n\n    const threeLoader = new ThreeLoader(threeLink)\n    const parallaxImageElements = document\n        .querySelectorAll<HTMLImageElement>('img.parallax')\n    const parallaxImages = Array.from(parallaxImageElements)\n        .map((element) => new ParallaxImage(element))\n\n    const updateWindowDimensions = async () => {\n        if (document.documentElement.clientWidth < 1023) {\n            for (let parallaxImage of parallaxImages) {\n                parallaxImage.hide()\n            }\n        } else {\n            await threeLoader.load()\n            for (let parallaxImage of parallaxImages) {\n                await parallaxImage.load()\n                parallaxImage.show()\n            }\n        }\n    }\n\n    await updateWindowDimensions()\n    window.addEventListener('resize', updateWindowDimensions, false)\n})\n\n","// startup\n// Load entry module\n__webpack_modules__[675]();\n// This entry module is referenced by other modules so it can't be inlined\n__webpack_modules__[715]();\n__webpack_modules__[886]();\n"],"sourceRoot":""}