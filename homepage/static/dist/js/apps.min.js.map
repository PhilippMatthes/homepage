{"version":3,"sources":["webpack://homepage/./homepage/static/src/ts/apps.ts"],"names":["document","addEventListener","event","macbookContainer","getElementById","macbookCodeContainer","preview","canvas","ctx","getContext","height","width","frame","Image","frameURL","index","onload","clearRect","drawImage","hasPreloadedFrames","updateCurrentPeerbridgeFrame","rect","getBoundingClientRect","progress","y","window","innerHeight","i","Promise","r","image","onerror","src","frameIndex","Math","round","updateCodeScroll","scrollTop","updateDeviceWidth","documentElement","clientWidth","style","display","removeEventListener"],"mappings":"AAAAA,SAASC,iBAAiB,oBAAoB,SAASC,GACrD,IAAMC,EAAmBH,SAASI,eAAe,qBAC3CC,EAAuBL,SAASI,eAAe,0BAC/CE,EAAUN,SAASI,eAAe,gCAClCG,EAA6BP,SAASI,eAAe,wBACrDI,EAAMD,EAAOE,WAAW,MAExBC,EAASH,EAAOI,OAAS,KAAO,MACtCJ,EAAOG,OAASA,EAEhB,IAAME,EAAQ,IAAIC,MAOlB,SAASC,EAASC,GAChB,MAAO,mDAAmDA,EAAK,QAPjEH,EAAMI,OAAS,WACbR,EAAIS,UAAU,EAAE,EAAEV,EAAOI,MAAMJ,EAAOG,QACtCF,EAAIU,UAAUN,EAAO,EAAG,EAAGA,EAAMD,MAAOC,EAAMF,OAChC,EAAG,EAAGH,EAAOI,MAAOJ,EAAOG,SAO3C,IAAIS,GAAqB,EAEzB,SAASC,IACP,IAAMC,EAAOd,EAAOe,wBACdC,EAAW,GAAKF,EAAKG,EAAIC,OAAOC,cAAgBL,EAAKX,OAASe,OAAOC,aAC3E,KAAIH,EAAW,GAAKA,EAAW,GAA/B,CAEA,IAAKJ,EAAoB,CACvB,I,eAASQ,GACP,IAAIC,SAAQ,SAAAC,GACV,IAAIC,EAAQ,IAAIjB,MAChBiB,EAAMd,OAASa,EACfC,EAAMC,QAAUF,EAChBC,EAAME,IAAMlB,EAASa,OALhBA,EAAI,GAAIA,GAAK,IAAKA,I,EAAlBA,GAQTR,GAAqB,EAEvB,IAAMc,EAAa,GAAKC,KAAKC,MAZN,GAYYZ,GACnCX,EAAMoB,IAAMlB,EAASmB,IAGvB,SAASG,IACP,IAAMf,EAAOlB,EAAiBmB,wBACxBC,EAAW,GAAKF,EAAKG,EAAIC,OAAOC,cAAgBL,EAAKX,OAASe,OAAOC,aACvEH,EAAW,GAAKA,EAAW,IAC/BlB,EAAqBgC,UAAuB,IAAXd,GAGnC,SAASe,IACHtC,SAASuC,gBAAgBC,YAAc,MACzCjC,EAAOkC,MAAMC,QAAU,OACvBpC,EAAQmC,MAAMC,QAAU,QACxBjB,OAAOkB,oBAAoB,SAAUvB,GAA8B,GAEnEK,OAAOkB,oBAAoB,SAAUP,GAAkB,KAEvD9B,EAAQmC,MAAMC,QAAU,OACxBnC,EAAOkC,MAAMC,QAAU,QACvBtB,IACAK,OAAOxB,iBAAiB,SAAUmB,GAA8B,GAChEgB,IACAX,OAAOxB,iBAAiB,SAAUmC,GAAkB,IAIxDE,IACAb,OAAOxB,iBAAiB,SAAUqC,GAAmB","file":"js/apps.min.js","sourcesContent":["document.addEventListener(\"DOMContentLoaded\", function(event) {\n  const macbookContainer = document.getElementById('macbook-container');\n  const macbookCodeContainer = document.getElementById('macbook-code-container');\n  const preview = document.getElementById('peerbridge-animation-preview');\n  const canvas = <HTMLCanvasElement> document.getElementById('peerbridge-animation');\n  const ctx = canvas.getContext('2d');\n\n  const height = canvas.width * (2541 / 2225);\n  canvas.height = height;\n\n  const frame = new Image();\n  frame.onload = function() {\n    ctx.clearRect(0,0,canvas.width,canvas.height)\n    ctx.drawImage(frame, 0, 0, frame.width, frame.height, // source rectangle\n                  0, 0, canvas.width, canvas.height); // destination rectangle\n  }\n\n  function frameURL(index: Number) {\n    return `/static/img/peerbridge-animation/animation-1000_${index}.webp`;\n  }\n\n  let hasPreloadedFrames = false;\n\n  function updateCurrentPeerbridgeFrame() {\n    const rect = canvas.getBoundingClientRect();\n    const progress = 1 - (rect.y + window.innerHeight) / (rect.height + window.innerHeight);\n    if (progress > 1 || progress < 0) return;\n    const numberOfFrames = 120 - 38;\n    if (!hasPreloadedFrames) {\n      for (let i = 38; i <= 120; i++) {\n        new Promise(r => {\n          var image = new Image();\n          image.onload = r;\n          image.onerror = r;\n          image.src = frameURL(i);\n        });\n      }\n      hasPreloadedFrames = true;\n    }\n    const frameIndex = 38 + Math.round(progress * numberOfFrames);\n    frame.src = frameURL(frameIndex);\n  }\n\n  function updateCodeScroll() {\n    const rect = macbookContainer.getBoundingClientRect();\n    const progress = 1 - (rect.y + window.innerHeight) / (rect.height + window.innerHeight);\n    if (progress > 1 || progress < 0) return;\n    macbookCodeContainer.scrollTop = progress * 1000;\n  }\n\n  function updateDeviceWidth() {\n    if (document.documentElement.clientWidth < 1023) {\n      canvas.style.display = 'none';\n      preview.style.display = 'block';\n      window.removeEventListener('scroll', updateCurrentPeerbridgeFrame, true);\n\n      window.removeEventListener('scroll', updateCodeScroll, true);\n    } else {\n      preview.style.display = 'none';\n      canvas.style.display = 'block';\n      updateCurrentPeerbridgeFrame();\n      window.addEventListener('scroll', updateCurrentPeerbridgeFrame, true);\n      updateCodeScroll();\n      window.addEventListener('scroll', updateCodeScroll, true);\n    }\n  }\n\n  updateDeviceWidth();\n  window.addEventListener('resize', updateDeviceWidth, false);\n});\n"],"sourceRoot":""}